volumes:
  # A named volume for the WordPress database. Without it, a volume will be created but is deleted when containers are deleted.
  db:
services:
  web:
    # nginx image from the Docker Hub https://hub.docker.com/_/nginx
    image: nginx:1.27.0-alpine3.19-perl
    ports:
      # Our app works from http://localhost and the port defined in .env (boilerplate found in .dev/env.local)
      # 8080 is set in a custom config file copied to the nginx image
      - "$WEB_PORT:8080"
    volumes:
      # Bind-mounting local directory onto container to make app code visible to nginx
      - ./:/app-mount
      # Mounting config file
      - ./.dev/nginx/site.conf:/etc/nginx/conf.d/site.conf
    # Making sure that necessary services are running
    depends_on:
      - php
      - mysql
  php:
    # An image we have built (or will build) using the official php-fpm image (see .dev/php/Dockerfile)
    image: wp/php:8
    environment:
      - WP_ENV=development
      - WP_HOME=$WP_HOME
      - PHP_ERROR_LEVEL=$PHP_ERROR_LEVEL
      - ACF_PRO_LICENSE_KEY=$ACF_PRO_LICENSE_KEY
    volumes:
      # App code directory must be mounted to PHP container as well
      - ./:/app-mount
    working_dir: /app-mount/public
  mysql:
    image: mariadb:11.4.2-ubi9
    environment:
      - MYSQL_ROOT_PASSWORD=password
      - MYSQL_DATABASE=wordpress
    volumes:
      - db:/var/lib/mysql
  node:
    image: node:20.13.1-alpine3.20
    volumes:
      - ./:/usr/src
    # Directory in which the command on the next line is run
    working_dir: /usr/src
    command: npm run dev
