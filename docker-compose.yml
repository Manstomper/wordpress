# Docker Compose file format version
version: "3.8"

volumes:
  # A named volume for the WordPress database (without it, a volume will be created but it is deleted along with containers)
  wpdb:
services:
  nginx:
    # An image we built from the official nginx image https://hub.docker.com/_/nginx
    image: rig/nginx:$NGINX_VERSION
    ports:
      # Our app works from http://localhost from a port defined in .env (8080 is set in custom config file copied to nginx image)
      - "$NGINX_PORT:8080"
    volumes:
      # Makes app code visible to nginx by bind-mounting local directory onto container
      - ./public:/public
    # Making sure that certain services are running before starting this one
    depends_on:
      - php
      - mysql
  php:
    image: rig/php:$PHP_VERSION
    environment:
      - WP_ENV=development
      - WP_HOME=$WP_HOME
    volumes:
      - ./public:/public
  mysql:
    image: mariadb:$MARIADB_VERSION
    environment:
      - MYSQL_ROOT_PASSWORD=password
      - MYSQL_DATABASE=wordpress
    volumes:
      - wpdb:/var/lib/mysql
  composer:
    image: rig/composer:$COMPOSER_VERSION
    environment:
      - ACF_KEY=$ACF_PRO_LICENSE_KEY
    volumes:
      - ./:/app
    working_dir: /app
    command: composer install --no-interaction
  node:
    image: node:$NODE_VERSION
    ports:
      # Exposing port because we use webpack-dev-server to automatically reload when Javascript or CSS changes
      - "3000:3000"
    volumes:
      - ./public/app/themes/demo/assets:/usr/src
    # Directory in which the command on the next line is run
    working_dir: /usr/src
    command: sh -c "npm install && npm run dev"
